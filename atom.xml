<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>大丁的技术博客</title>
  
  <subtitle>夜静海涛三万里，月明飞锡下天风</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yudading.github.io/"/>
  <updated>2020-07-21T17:50:42.323Z</updated>
  <id>https://yudading.github.io/</id>
  
  <author>
    <name>大丁</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DevOps_01 DevOps是什么？</title>
    <link href="https://yudading.github.io/2020/07/22/DevOps-01/"/>
    <id>https://yudading.github.io/2020/07/22/DevOps-01/</id>
    <published>2020-07-21T16:30:23.000Z</published>
    <updated>2020-07-21T17:50:42.323Z</updated>
    
    <content type="html"><![CDATA[<h1 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h1><p>大家好，我是大丁，很高兴在这里和大家聊聊DevOps，2020年对我而言是如此地深刻，不只是疫情的原因，虽然在家里有了一些自己的时间，不用每天早起站公交挤地铁，可是人一旦休息久了也会心生厌倦，不过也好，最少有时间让自己放松起来，想想这些年的工作过往，自己做了什么，有哪些收获？技术上提高了多少？踏过多少的坑？就此，与有缘的你分享一下我的过往吧，如果你同我如前浪，望指正，如你是后浪，如你看过我的文字能有收获，那我就很开心了！</p><h1 id="DevOps是什么？"><a href="#DevOps是什么？" class="headerlink" title="DevOps是什么？"></a>DevOps是什么？</h1><h2 id="维基百科"><a href="#维基百科" class="headerlink" title="维基百科"></a>维基百科</h2><blockquote><p>DevOps（Development和Operations的组合词）是一种重视“软件开发人员（Dev）”和“IT运维技术人员（Ops）”之间沟通合作的文化、运动或惯例。透过自动化“软件交付”和“架构变更”的流程，来使得构建、测试、发布软件能够更加地快捷、频繁和可靠。</p></blockquote><p>DevOps是外来品，有着太多的属性，下面说说我的个人理解，DevOps它是一种工作方式也是一种文化，对企业而言，它可能是一个团队，也可能是一种口号，可以是公司正在招聘的一个职位，可以是你必须使用的一套相关的工具，可以是技术人员要达到的一种目标，总之，近几年，这个DevOps大火，互联网也好，物联网也罢，如果不选择DevOps，只能说明你所在的公司落后了，要不就是技术人员太low了。</p><p>它包含了不只是通过开发与运维的紧密合作来提高效率，还包括了相关的持续集成、持续发布相关的技术和工具，它需要持续改善的运维架构等等，而这一切都要在结合企业业务的真正实践上，并且你只能借鉴别人，但不能照搬，因为没有哪两个公司是一模一样的。</p><p>我的团队对外就是DevOps，在我的团队中的同事以前有的是做纯开发工作的，也有是做传统运维的，而DevOps的出现，模糊了二者之间的界线，与以前开发与运维关系完全不同，在公司中我做为运维人员要不断的对接开发同事，不只是为他们搭建开发、升级、发布的环境，也要做过上线后的维护，而对开发人员也要和我保持有效的沟通，以便让他们的代码迅速上线。<br>举个真实的过往例子，早期我负责升级工作，当时公司有小三十个服务，它们之间有很强的耦合，当时还是处在脚本化的情况下，我写好了脚本对开发同事的代码进行解包，打包，上传AWS存储，再利用相关的命令行提交服务器等等一系列操作，记得有一天有四十多次升级，是的，四十多次，那天我几乎没做别的工作，一直做升级的事，升级后还要看是否升级成功，服务是否有问题，那天的工作量一想起来就有些上头。</p><p>痛过了，才让人思考，怎么才能减少这种工作量呢？如何自动化升级，怎么样才能让开发人员做一些操作，让运维人员把更多的精力放在维护上呢？如何让开发人员做一些升级的工作他们愿意吗？有些开发人员会觉得只要我代码没问题交给运维就好，出了问题都是运维的责任，这样也造成了开发与运维的恶化关系，所以那时我的工作重点放在了和开发人员好好的沟通上，说明白了相互的具体操作，让公司技术老大来推动，把所有相关的操作编写成文档，明确了各自的责任，同时优化了升级流程，选用了主流的开源工具。</p><p>这样一切规范下来，就不那么痛苦了。在那个时候我对DevOps的体会就是：在现在快速迭代的大环境下，为了提高生产效率，需要两者紧密的合作，说白了<strong>就是想办法减少开发与运维之间的隔阂带来的消耗，提高开发速度，快速上线，不断迭代，它需要开发与运维人员之间良好的沟通</strong>。</p><p>随着工作的不断深入，我也有了更深的体会，现在让我说DevOps到底是什么呢？</p><p>在这里我想说<strong>DevOps解决的是人与人之间的关系，即Dev（开发）和Ops（运维），就是利用相互灵活的关系完成流程化、工具的不断优化，强调精益，减少浪费，快速交付，提供给用户功能体验</strong>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;缘起&quot;&gt;&lt;a href=&quot;#缘起&quot; class=&quot;headerlink&quot; title=&quot;缘起&quot;&gt;&lt;/a&gt;缘起&lt;/h1&gt;&lt;p&gt;大家好，我是大丁，很高兴在这里和大家聊聊DevOps，2020年对我而言是如此地深刻，不只是疫情的原因，虽然在家里有了一些自己的时间，不用每
      
    
    </summary>
    
    
      <category term="DevOps" scheme="https://yudading.github.io/categories/DevOps/"/>
    
    
      <category term="DevOps" scheme="https://yudading.github.io/tags/DevOps/"/>
    
      <category term="DevOps是什么？" scheme="https://yudading.github.io/tags/DevOps%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    
  </entry>
  
</feed>
